require("dotenv").config();
const { Telegraf } = require("telegraf");
const express = require("express");

const bot = new Telegraf(process.env.BOT_TOKEN);
const app = express();
const PORT = process.env.PORT || 8000;

const ADMINS = process.env.ADMINS.split(",");

const loggedInAdmins = new Set();

bot.command("login", (ctx) => {
  const parts = ctx.message.text.split(" ");
  if (parts[1] === process.env.ADMIN_PASSWORD) {
    loggedInAdmins.add(ctx.from.id.toString());
    return ctx.reply("тЬЕ рж╕ржлрж▓ржнрж╛ржмрзЗ рж▓ржЧржЗржи рж╣ржпрж╝рзЗржЫрзЗ!");
  }
  ctx.reply("тЭМ ржнрзБрж▓ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб!");
});

bot.command("logout", (ctx) => {
  loggedInAdmins.delete(ctx.from.id.toString());
  ctx.reply("ЁЯЪк рж▓ржЧржЖржЙржЯ рж╕ржорзНржкржирзНржи рж╣ржпрж╝рзЗржЫрзЗред");
});

function isAdmin(id) { return ADMINS.includes(id.toString()) && loggedInAdmins.has(id.toString());
  return ADMINS.includes(id.toString());
}

let users = {};
let giveawayEntries = [];
let orders = {};

bot.start((ctx) => {
  const name = ctx.from.first_name;
  const userId = ctx.from.id;

  if (!users[userId]) {
    users[userId] = {
      username: ctx.from.username || "no_username",
      referredBy: ctx.message.text.split(" ")[1] || null,
    };
    if (users[userId].referredBy) {
      giveawayEntries.push(users[userId].referredBy);
    }
  }

  ctx.reply(
    `ЁЯСЛ рж╣рзНржпрж╛рж▓рзЛ ${name}!

рж╕рзНржмрж╛ржЧрждржо *FF Diamond Pro Bot*-ржП!

рж╢рзБржзрзБ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ ржЬржирзНржпред`,
    {
      reply_markup: {
        keyboard: [
          ["ЁЯТО ржбрж╛ржпрж╝ржоржирзНржб ржХрж┐ржирзБржи", "ЁЯОБ ржЧрж┐ржнржЕрзНржпрж╛ржУржпрж╝рзЗ"],
          ["ЁЯУв рж░рзЗржлрж╛рж░ ржХрж░рзБржи", "ЁЯТО ржЕржлрж╛рж░ ржУ ржкрзНржпрж╛ржХрзЗржЬ"],
          ["тД╣я╕П рж╕рж╛рж╣рж╛ржпрзНржп"],
        ],
        resize_keyboard: true,
      },
      parse_mode: "Markdown",
    }
  );
});

bot.hears("ЁЯТО ржбрж╛ржпрж╝ржоржирзНржб ржХрж┐ржирзБржи", (ctx) => {
  ctx.reply("ЁЯЫТ ржЖржкржирж╛рж░ UID ржУ рж╕рж╛рж░рзНржнрж╛рж░ ржХрзЛржб ржжрж┐ржи:\n\nExample: `123456789 | 301`", {
    parse_mode: "Markdown",
  });
});

bot.hears("ЁЯОБ ржЧрж┐ржнржЕрзНржпрж╛ржУржпрж╝рзЗ", (ctx) => {
  ctx.reply("ЁЯОЙ ржЧрж┐ржнржЕрзНржпрж╛ржУржпрж╝рзЗ ржЕржВрж╢ ржирж┐рждрзЗ /refer ржЪрж╛ржкрзБржи ржПржмржВ ржмржирзНржзрзБржжрзЗрж░ рж░рзЗржлрж╛рж░ ржХрж░рзБржиред");
});

bot.hears("ЁЯУв рж░рзЗржлрж╛рж░ ржХрж░рзБржи", (ctx) => {
  const id = ctx.from.id;
  const link = `https://t.me/${bot.botInfo.username}?start=${id}`;
  ctx.reply(`ЁЯФЧ ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржВржХ:\n${link}`);
});

bot.hears("тД╣я╕П рж╕рж╛рж╣рж╛ржпрзНржп", (ctx) => {
  ctx.reply("тЭУ рж╕рж╣рж╛ржпрж╝рждрж╛рж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: @rifatbro22");
});

bot.hears("ЁЯТО ржЕржлрж╛рж░ ржУ ржкрзНржпрж╛ржХрзЗржЬ", (ctx) => {
  ctx.replyWithMarkdownV2(`

ЁЯУж *Free Fire Diamond Offers (ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рж┐ рж╕рж╛рж░рзНржнрж╛рж░)* ЁЯТе

1\. 25ЁЯТО = 28рз│  
2\. 50ЁЯТО = 45рз│  
3\. 115ЁЯТО = 95рз│  
4\. 240ЁЯТО = 185рз│  
5\. 355ЁЯТО = 270рз│  
6\. 480ЁЯТО = 360рз│  
7\. 610ЁЯТО = 490рз│  
8\. 725ЁЯТО = 595рз│  
9\. 850ЁЯТО = 630рз│  
10\. 1090ЁЯТО = 805рз│  
11\. 1240ЁЯТО = 900рз│  
12\. 1480ЁЯТО = 1120рз│  
13\. 1720ЁЯТО = 1270рз│  
14\. 1850ЁЯТО = 1350рз│  
15\. 2090ЁЯТО = 1500рз│  
16\. 2530ЁЯТО = 1690рз│  
17\. 3140ЁЯТО = 2400рз│  
18\. 3770ЁЯТО = 2700рз│  
19\. 5060ЁЯТО = 3670рз│  
20\. 10120ЁЯТО = 6900рз│

тнР *Other Offers:*  
тАв Weekly = 165рз│  
тАв Monthly = 800рз│  
тАв Level Up Pass = 170рз│

ЁЯОп *Evo Access Package:*  
тАв 3 Day = 80рз│  
тАв 7 Day = 120рз│  
тАв 30 Day = 400рз│  
тАв 30 Day ├Ч2 = 650рз│

ЁЯОп *Weekly Lite Package:*  
тАв ├Ч1 = 45рз│  
тАв ├Ч2 = 90рз│  
тАв ├Ч3 = 135рз│  
тАв ├Ч5 = 225рз│  
тАв ├Ч10 = 450рз│

ЁЯУМ *Rules:*
ЁЯФ╣ рж╢рзБржзрзБржорж╛рждрзНрж░ *Free Fire* ржПрж░ ржЬржирзНржп ржЯржк ржЖржк  
ЁЯФ╣ рж╢рзБржзрзБ *UID ржУ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░ (301)* ржЧрзНрж░рж╣ржгржпрзЛржЧрзНржп  
ЁЯФ╣ ржкрзЗржорзЗржирзНржЯрзЗрж░ ржкрж░рзЗ ржЕрж░рзНржбрж╛рж░ ржкрзНрж░рж╕рзЗрж╕ рж╣ржмрзЗ  
ЁЯФ╣ ржЕрж░рзНржбрж╛рж░ ржмрж╛рждрж┐рж▓ рж╣рж▓рзЗ Refund ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ

ЁЯЪА ржЕрж░рзНржбрж╛рж░ ржХрж░рждрзЗ 'ЁЯТО ржбрж╛ржпрж╝ржоржирзНржб ржХрж┐ржирзБржи' ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи!

`);
});

bot.on("text", (ctx) => {
  const msg = ctx.message.text;
  const parts = msg.split("|");
  if (parts.length === 2) {
    const uid = parts[0].trim();
    const server = parts[1].trim();
    if (server === "301") {
      orders[uid] = {
        from: ctx.from,
        status: "pending",
      };
      ctx.reply(`тЬЕ UID ${uid} рж╕ржлрж▓ржнрж╛ржмрзЗ ржЧрзНрж░рж╣ржг ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржзрзАржи рж░рзЯрзЗржЫрзЗред`);
      bot.telegram.sendMessage(
        ADMINS[0],
        `ЁЯЖХ ржирждрзБржи ржЕрж░рзНржбрж╛рж░:\nUID: ${uid}\nUser: @${ctx.from.username || "No Username"} (${ctx.from.id})`
      );
    } else {
      ctx.reply("тЭМ ржЖржорж░рж╛ рж╢рзБржзрзБ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ (server code: 301) рж╕рж╛рж░рзНржнрж╛рж░ ржЧрзНрж░рж╣ржг ржХрж░рж┐!");
    }
  }
});

bot.command("confirm", (ctx) => {
  if (!isAdmin(ctx.from.id)) return ctx.reply("тЫФ ржЖржкржирж┐ ржЕрзНржпрж╛ржбржорж┐ржи ржиржи!");
  const uid = ctx.message.text.split(" ")[1];
  if (!uid || !orders[uid]) return ctx.reply("тЭЧ UID ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред");
  const user = orders[uid].from;
  orders[uid].status = "confirmed";
  bot.telegram.sendMessage(user.id, `тЬЕ ржЖржкржирж╛рж░ UID ${uid} ржПрж░ ржЕрж░рзНржбрж╛рж░ рж╕ржлрж▓ржнрж╛ржмрзЗ ржХржиржлрж╛рж░рзНржо ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!`);
  ctx.reply(`тШСя╕П UID ${uid} ржХржиржлрж╛рж░рзНржо ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред`);
});

bot.command("reject", (ctx) => {
  if (!isAdmin(ctx.from.id)) return ctx.reply("тЫФ ржЖржкржирж┐ ржЕрзНржпрж╛ржбржорж┐ржи ржиржи!");
  const uid = ctx.message.text.split(" ")[1];
  if (!uid || !orders[uid]) return ctx.reply("тЭЧ UID ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред");
  const user = orders[uid].from;
  orders[uid].status = "rejected";
  bot.telegram.sendMessage(user.id, `тЭМ ржжрзБржГржЦрж┐ржд, ржЖржкржирж╛рж░ UID ${uid} ржПрж░ ржЕрж░рзНржбрж╛рж░ ржмрж╛рждрж┐рж▓ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред`);
  ctx.reply(`ЁЯЪл UID ${uid} рж░рж┐ржЬрзЗржХрзНржЯ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред`);
});

bot.command("users", (ctx) => {
  if (!isAdmin(ctx.from.id)) return ctx.reply("тЫФ ржЖржкржирж┐ ржЕрзНржпрж╛ржбржорж┐ржи ржиржи!");
  ctx.reply(`ЁЯУК ржорзЛржЯ ржЗржЙржЬрж╛рж░: ${Object.keys(users).length}`);
});

bot.command("broadcast", (ctx) => {
  if (!isAdmin(ctx.from.id)) return ctx.reply("тЫФ ржЖржкржирж┐ ржЕрзНржпрж╛ржбржорж┐ржи ржиржи!");
  const msg = ctx.message.text.split(" ").slice(1).join(" ");
  if (!msg) return ctx.reply("Usage: /broadcast ржЖржкржирж╛рж░_ржмрж╛рж░рзНрждрж╛");
  Object.keys(users).forEach((id) => {
    bot.telegram.sendMessage(id, `ЁЯУв Admin:\n${msg}`);
  });
});

app.get("/", (req, res) => {
  res.send("FF Diamond Bot is running!");
});
app.listen(PORT, () => {
  console.log(`ЁЯМР Server is running on port ${PORT}`);
});

bot.launch();
